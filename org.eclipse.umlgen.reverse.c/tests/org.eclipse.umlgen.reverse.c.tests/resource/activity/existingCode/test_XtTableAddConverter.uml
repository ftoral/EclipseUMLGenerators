<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xmi:id="_Jqj_wGy-Ed-3G_SReIW7qg" name="testEmptyActivity">
  <packagedElement xsi:type="uml:Activity" xmi:id="_JqlN4Gy-Ed-3G_SReIW7qg" name="_XtTableAddConverter">
    <node xsi:type="uml:InitialNode" xmi:id="_JqlN4Wy-Ed-3G_SReIW7qg" outgoing="_JqlONWy-Ed-3G_SReIW7qg"/>
    <node xsi:type="uml:OpaqueAction" xmi:id="_JqlN4my-Ed-3G_SReIW7qg" name="register Con..." outgoing="_JqlOAmy-Ed-3G_SReIW7qg" incoming="_JqlONWy-Ed-3G_SReIW7qg">
      <body>register ConverterPtr       *pp;&#xA;register ConverterPtr       p;&#xA;XtConvertArgList args;&#xA;pp= &amp;table[ProcHash(from_type, to_type) &amp; CONVERTHASHMASK];</body>
      <language>C</language>
    </node>
    <node xsi:type="uml:LoopNode" xmi:id="_JqlN42y-Ed-3G_SReIW7qg" name="while ((p = *pp) &amp;&amp; (p->from != from_type || p->to != to_type))" outgoing="_JqlODmy-Ed-3G_SReIW7qg" incoming="_JqlOAmy-Ed-3G_SReIW7qg" isTestedFirst="true" bodyPart="_JqlN6my-Ed-3G_SReIW7qg" decider="_JqlN6Gy-Ed-3G_SReIW7qg" test="_JqlN52y-Ed-3G_SReIW7qg">
      <edge xsi:type="uml:ControlFlow" xmi:id="_JqlN5Gy-Ed-3G_SReIW7qg" source="_JqlN6my-Ed-3G_SReIW7qg" target="_JqlN62y-Ed-3G_SReIW7qg">
        <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlN5Wy-Ed-3G_SReIW7qg" value="true"/>
        <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlN5my-Ed-3G_SReIW7qg" value="1"/>
      </edge>
      <node xsi:type="uml:OpaqueAction" xmi:id="_JqlN52y-Ed-3G_SReIW7qg" name="(p = *pp) &amp;&amp;...">
        <body>(p = *pp) &amp;&amp; (p->from != from_type || p->to != to_type)</body>
        <language>C</language>
        <outputValue xmi:id="_JqlN6Gy-Ed-3G_SReIW7qg">
          <upperBound xsi:type="uml:LiteralNull" xmi:id="_JqlN6Wy-Ed-3G_SReIW7qg"/>
        </outputValue>
      </node>
      <node xsi:type="uml:OpaqueAction" xmi:id="_JqlN6my-Ed-3G_SReIW7qg" name="pp = &amp;p->nex..." outgoing="_JqlN5Gy-Ed-3G_SReIW7qg">
        <body>pp = &amp;p->next;</body>
        <language>C</language>
      </node>
      <node xsi:type="uml:FlowFinalNode" xmi:id="_JqlN62y-Ed-3G_SReIW7qg" name="end of loop" incoming="_JqlN5Gy-Ed-3G_SReIW7qg"/>
    </node>
    <node xsi:type="uml:DecisionNode" xmi:id="_JqlN7Gy-Ed-3G_SReIW7qg" name="if (p)" outgoing="_JqlOBWy-Ed-3G_SReIW7qg _JqlOC2y-Ed-3G_SReIW7qg" incoming="_JqlODmy-Ed-3G_SReIW7qg"/>
    <node xsi:type="uml:MergeNode" xmi:id="_JqlN7Wy-Ed-3G_SReIW7qg" outgoing="_JqlOEWy-Ed-3G_SReIW7qg" incoming="_JqlOCGy-Ed-3G_SReIW7qg _JqlOC2y-Ed-3G_SReIW7qg"/>
    <node xsi:type="uml:OpaqueAction" xmi:id="_JqlN7my-Ed-3G_SReIW7qg" name="*pp = p->nex..." outgoing="_JqlOCGy-Ed-3G_SReIW7qg" incoming="_JqlOBWy-Ed-3G_SReIW7qg">
      <body>*pp = p->next;&#xA;XtFree((char *)p);</body>
      <language>C</language>
    </node>
    <node xsi:type="uml:OpaqueAction" xmi:id="_JqlN72y-Ed-3G_SReIW7qg" name="p = (Convert..." outgoing="_JqlOFGy-Ed-3G_SReIW7qg" incoming="_JqlOEWy-Ed-3G_SReIW7qg">
      <body>p = (ConverterPtr) __XtMalloc(sizeof(ConverterRec) +&#xA;                                sizeof(XtConvertArgRec) * num_args);&#xA;p->next         = *pp;&#xA;*pp = p;&#xA;p->from         = from_type;&#xA;p->to           = to_type;&#xA;p->converter    = converter;&#xA;p->destructor   = destructor;&#xA;p->num_args     = num_args;&#xA;p->global       = global;&#xA;args = ConvertArgs(p);</body>
      <language>C</language>
    </node>
    <node xsi:type="uml:LoopNode" xmi:id="_JqlN8Gy-Ed-3G_SReIW7qg" name="while (num_args--)" outgoing="_JqlOF2y-Ed-3G_SReIW7qg" incoming="_JqlOFGy-Ed-3G_SReIW7qg" isTestedFirst="true" bodyPart="_JqlN92y-Ed-3G_SReIW7qg" decider="_JqlN9Wy-Ed-3G_SReIW7qg" test="_JqlN9Gy-Ed-3G_SReIW7qg">
      <edge xsi:type="uml:ControlFlow" xmi:id="_JqlN8Wy-Ed-3G_SReIW7qg" source="_JqlN92y-Ed-3G_SReIW7qg" target="_JqlN-Gy-Ed-3G_SReIW7qg">
        <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlN8my-Ed-3G_SReIW7qg" value="true"/>
        <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlN82y-Ed-3G_SReIW7qg" value="1"/>
      </edge>
      <node xsi:type="uml:OpaqueAction" xmi:id="_JqlN9Gy-Ed-3G_SReIW7qg" name="num_args--">
        <body>num_args--</body>
        <language>C</language>
        <outputValue xmi:id="_JqlN9Wy-Ed-3G_SReIW7qg">
          <upperBound xsi:type="uml:LiteralNull" xmi:id="_JqlN9my-Ed-3G_SReIW7qg"/>
        </outputValue>
      </node>
      <node xsi:type="uml:OpaqueAction" xmi:id="_JqlN92y-Ed-3G_SReIW7qg" name="*args++ = *c..." outgoing="_JqlN8Wy-Ed-3G_SReIW7qg">
        <body>*args++ = *convert_args++;</body>
        <language>C</language>
      </node>
      <node xsi:type="uml:FlowFinalNode" xmi:id="_JqlN-Gy-Ed-3G_SReIW7qg" name="end of loop" incoming="_JqlN8Wy-Ed-3G_SReIW7qg"/>
    </node>
    <node xsi:type="uml:OpaqueAction" xmi:id="_JqlN-Wy-Ed-3G_SReIW7qg" name="p->new_style..." outgoing="_JqlOMmy-Ed-3G_SReIW7qg" incoming="_JqlOF2y-Ed-3G_SReIW7qg">
      <body>p->new_style    = new_style;&#xA;p->do_ref_count = False;</body>
      <language>C</language>
    </node>
    <node xsi:type="uml:DecisionNode" xmi:id="_JqlN-my-Ed-3G_SReIW7qg" name="if (destructor || (cache_type &amp; 0xff))" outgoing="_JqlOJmy-Ed-3G_SReIW7qg _JqlOLGy-Ed-3G_SReIW7qg" incoming="_JqlOMmy-Ed-3G_SReIW7qg"/>
    <node xsi:type="uml:MergeNode" xmi:id="_JqlN-2y-Ed-3G_SReIW7qg" outgoing="_JqlOOGy-Ed-3G_SReIW7qg" incoming="_JqlOKWy-Ed-3G_SReIW7qg _JqlOL2y-Ed-3G_SReIW7qg"/>
    <node xsi:type="uml:OpaqueAction" xmi:id="_JqlN_Gy-Ed-3G_SReIW7qg" name="p->cache_typ..." outgoing="_JqlOI2y-Ed-3G_SReIW7qg" incoming="_JqlOJmy-Ed-3G_SReIW7qg">
      <body>p->cache_type = cache_type &amp; 0xff;</body>
      <language>C</language>
    </node>
    <node xsi:type="uml:DecisionNode" xmi:id="_JqlN_Wy-Ed-3G_SReIW7qg" name="if (cache_type &amp; XtCacheRefCount)" outgoing="_JqlOGmy-Ed-3G_SReIW7qg _JqlOIGy-Ed-3G_SReIW7qg" incoming="_JqlOI2y-Ed-3G_SReIW7qg"/>
    <node xsi:type="uml:MergeNode" xmi:id="_JqlN_my-Ed-3G_SReIW7qg" outgoing="_JqlOKWy-Ed-3G_SReIW7qg" incoming="_JqlOHWy-Ed-3G_SReIW7qg _JqlOIGy-Ed-3G_SReIW7qg"/>
    <node xsi:type="uml:OpaqueAction" xmi:id="_JqlN_2y-Ed-3G_SReIW7qg" name="p->do_ref_co..." outgoing="_JqlOHWy-Ed-3G_SReIW7qg" incoming="_JqlOGmy-Ed-3G_SReIW7qg">
      <body>p->do_ref_count = True;</body>
      <language>C</language>
    </node>
    <node xsi:type="uml:OpaqueAction" xmi:id="_JqlOAGy-Ed-3G_SReIW7qg" name="p->cache_typ..." outgoing="_JqlOL2y-Ed-3G_SReIW7qg" incoming="_JqlOLGy-Ed-3G_SReIW7qg">
      <body>p->cache_type = XtCacheNone;</body>
      <language>C</language>
    </node>
    <node xsi:type="uml:ActivityFinalNode" xmi:id="_JqlOAWy-Ed-3G_SReIW7qg" incoming="_JqlOOGy-Ed-3G_SReIW7qg"/>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOAmy-Ed-3G_SReIW7qg" source="_JqlN4my-Ed-3G_SReIW7qg" target="_JqlN42y-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlOA2y-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOBGy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOBWy-Ed-3G_SReIW7qg" source="_JqlN7Gy-Ed-3G_SReIW7qg" target="_JqlN7my-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:OpaqueExpression" xmi:id="_JqlOBmy-Ed-3G_SReIW7qg">
        <body>p</body>
        <language>C</language>
      </guard>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOB2y-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOCGy-Ed-3G_SReIW7qg" source="_JqlN7my-Ed-3G_SReIW7qg" target="_JqlN7Wy-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlOCWy-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOCmy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOC2y-Ed-3G_SReIW7qg" source="_JqlN7Gy-Ed-3G_SReIW7qg" target="_JqlN7Wy-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:OpaqueExpression" xmi:id="_JqlODGy-Ed-3G_SReIW7qg">
        <body>[else]</body>
        <language>C</language>
      </guard>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlODWy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlODmy-Ed-3G_SReIW7qg" source="_JqlN42y-Ed-3G_SReIW7qg" target="_JqlN7Gy-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlOD2y-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOEGy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOEWy-Ed-3G_SReIW7qg" source="_JqlN7Wy-Ed-3G_SReIW7qg" target="_JqlN72y-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlOEmy-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOE2y-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOFGy-Ed-3G_SReIW7qg" source="_JqlN72y-Ed-3G_SReIW7qg" target="_JqlN8Gy-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlOFWy-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOFmy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOF2y-Ed-3G_SReIW7qg" source="_JqlN8Gy-Ed-3G_SReIW7qg" target="_JqlN-Wy-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlOGGy-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOGWy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOGmy-Ed-3G_SReIW7qg" source="_JqlN_Wy-Ed-3G_SReIW7qg" target="_JqlN_2y-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:OpaqueExpression" xmi:id="_JqlOG2y-Ed-3G_SReIW7qg">
        <body>cache_type &amp; XtCacheRefCount</body>
        <language>C</language>
      </guard>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOHGy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOHWy-Ed-3G_SReIW7qg" source="_JqlN_2y-Ed-3G_SReIW7qg" target="_JqlN_my-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlOHmy-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOH2y-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOIGy-Ed-3G_SReIW7qg" source="_JqlN_Wy-Ed-3G_SReIW7qg" target="_JqlN_my-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:OpaqueExpression" xmi:id="_JqlOIWy-Ed-3G_SReIW7qg">
        <body>[else]</body>
        <language>C</language>
      </guard>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOImy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOI2y-Ed-3G_SReIW7qg" source="_JqlN_Gy-Ed-3G_SReIW7qg" target="_JqlN_Wy-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlOJGy-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOJWy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOJmy-Ed-3G_SReIW7qg" source="_JqlN-my-Ed-3G_SReIW7qg" target="_JqlN_Gy-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:OpaqueExpression" xmi:id="_JqlOJ2y-Ed-3G_SReIW7qg">
        <body>destructor || (cache_type &amp; 0xff)</body>
        <language>C</language>
      </guard>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOKGy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOKWy-Ed-3G_SReIW7qg" source="_JqlN_my-Ed-3G_SReIW7qg" target="_JqlN-2y-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlOKmy-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOK2y-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOLGy-Ed-3G_SReIW7qg" source="_JqlN-my-Ed-3G_SReIW7qg" target="_JqlOAGy-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:OpaqueExpression" xmi:id="_JqlOLWy-Ed-3G_SReIW7qg">
        <body>[else]</body>
        <language>C</language>
      </guard>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOLmy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOL2y-Ed-3G_SReIW7qg" source="_JqlOAGy-Ed-3G_SReIW7qg" target="_JqlN-2y-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlOMGy-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOMWy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOMmy-Ed-3G_SReIW7qg" source="_JqlN-Wy-Ed-3G_SReIW7qg" target="_JqlN-my-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlOM2y-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlONGy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlONWy-Ed-3G_SReIW7qg" source="_JqlN4Wy-Ed-3G_SReIW7qg" target="_JqlN4my-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlONmy-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlON2y-Ed-3G_SReIW7qg" value="1"/>
    </edge>
    <edge xsi:type="uml:ControlFlow" xmi:id="_JqlOOGy-Ed-3G_SReIW7qg" source="_JqlN-2y-Ed-3G_SReIW7qg" target="_JqlOAWy-Ed-3G_SReIW7qg">
      <guard xsi:type="uml:LiteralBoolean" xmi:id="_JqlOOWy-Ed-3G_SReIW7qg" value="true"/>
      <weight xsi:type="uml:LiteralInteger" xmi:id="_JqlOOmy-Ed-3G_SReIW7qg" value="1"/>
    </edge>
  </packagedElement>
</uml:Model>
